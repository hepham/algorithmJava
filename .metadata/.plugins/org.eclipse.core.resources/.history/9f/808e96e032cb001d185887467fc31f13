package BFS;
class Point{
	private int x;
	private int y;
	private int d;
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public int getD() {
		return d;
	}
	public void setD(int d) {
		this.d = d;
	}
	public Point(int x, int y, int d) {
		super();
		this.x = x;
		this.y = y;
		this.d = d;
	}
	@Override
	public String toString() {
		return "Point [x=" + x + ", y=" + y + ", d=" + d + "]";
	}
	
}
class customQueue{
	int size=10000;
	int top=-1;
	int start=-1;
	Point[] arr=new Point[size];
	boolean isEmpty() {
		return top==start;
	}
	boolean isFull() {
		return top==size;
	}
	void add(Point p) {
		if(!isFull()) {
			arr[++top]=p;
		}
	}
	Point get() {
		if(!isEmpty()) {
			return arr[++start];
		}
		return new Point(0,0,-1);
	}
}
public class BoomZombie {
	public static int timeDestroy(int arr[],Point boom) {
		int max=0;
		customQueue queue=new customQueue();
		queue.add(boom);
		while(!queue.isEmpty()) {
			Point t=queue.get();
			int[] dx= {-1,0,0,1};
			int[] dy= {0,-1,1,0};
			for(int i=0;i<4;i++) {
				int newX=t.getX()+dx[i];
				int newY=t.getY()+dy[i];
			}
		}
		return max;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
